// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_gc_engine_config.proto

#include "ssl_gc_engine_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ssl_5fgc_5fengine_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgc_5fengine_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutoRefConfig_GameEventBehaviorEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgc_5fengine_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Config_GameEventBehaviorEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgc_5fengine_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AutoRefConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgc_5fengine_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Config_AutoRefConfigsEntry_DoNotUse;
}  // namespace protobuf_ssl_5fgc_5fengine_5fconfig_2eproto
class Config_GameEventBehaviorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config_GameEventBehaviorEntry_DoNotUse>
      _instance;
} _Config_GameEventBehaviorEntry_DoNotUse_default_instance_;
class Config_AutoRefConfigsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config_AutoRefConfigsEntry_DoNotUse>
      _instance;
} _Config_AutoRefConfigsEntry_DoNotUse_default_instance_;
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
class AutoRefConfig_GameEventBehaviorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoRefConfig_GameEventBehaviorEntry_DoNotUse>
      _instance;
} _AutoRefConfig_GameEventBehaviorEntry_DoNotUse_default_instance_;
class AutoRefConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoRefConfig>
      _instance;
} _AutoRefConfig_default_instance_;
namespace protobuf_ssl_5fgc_5fengine_5fconfig_2eproto {
static void InitDefaultsConfig_GameEventBehaviorEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Config_GameEventBehaviorEntry_DoNotUse_default_instance_;
    new (ptr) ::Config_GameEventBehaviorEntry_DoNotUse();
  }
  ::Config_GameEventBehaviorEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Config_GameEventBehaviorEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfig_GameEventBehaviorEntry_DoNotUse}, {}};

static void InitDefaultsConfig_AutoRefConfigsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Config_AutoRefConfigsEntry_DoNotUse_default_instance_;
    new (ptr) ::Config_AutoRefConfigsEntry_DoNotUse();
  }
  ::Config_AutoRefConfigsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Config_AutoRefConfigsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfig_AutoRefConfigsEntry_DoNotUse}, {
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_AutoRefConfig.base,}};

static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Config_default_instance_;
    new (ptr) ::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConfig}, {
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_Config_GameEventBehaviorEntry_DoNotUse.base,
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_Config_AutoRefConfigsEntry_DoNotUse.base,}};

static void InitDefaultsAutoRefConfig_GameEventBehaviorEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AutoRefConfig_GameEventBehaviorEntry_DoNotUse_default_instance_;
    new (ptr) ::AutoRefConfig_GameEventBehaviorEntry_DoNotUse();
  }
  ::AutoRefConfig_GameEventBehaviorEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutoRefConfig_GameEventBehaviorEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutoRefConfig_GameEventBehaviorEntry_DoNotUse}, {}};

static void InitDefaultsAutoRefConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AutoRefConfig_default_instance_;
    new (ptr) ::AutoRefConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AutoRefConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AutoRefConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAutoRefConfig}, {
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_AutoRefConfig_GameEventBehaviorEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Config_GameEventBehaviorEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Config_AutoRefConfigsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoRefConfig_GameEventBehaviorEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoRefConfig.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_GameEventBehaviorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_GameEventBehaviorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_GameEventBehaviorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_GameEventBehaviorEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_AutoRefConfigsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_AutoRefConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_AutoRefConfigsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config_AutoRefConfigsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, game_event_behavior_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, auto_ref_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, active_tracker_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, teams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Config, auto_continue_),
  ~0u,
  ~0u,
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig_GameEventBehaviorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig_GameEventBehaviorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig_GameEventBehaviorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig_GameEventBehaviorEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AutoRefConfig, game_event_behavior_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::Config_GameEventBehaviorEntry_DoNotUse)},
  { 9, 16, sizeof(::Config_AutoRefConfigsEntry_DoNotUse)},
  { 18, 28, sizeof(::Config)},
  { 33, 40, sizeof(::AutoRefConfig_GameEventBehaviorEntry_DoNotUse)},
  { 42, 48, sizeof(::AutoRefConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Config_GameEventBehaviorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Config_AutoRefConfigsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AutoRefConfig_GameEventBehaviorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AutoRefConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ssl_gc_engine_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032ssl_gc_engine_config.proto\"\354\003\n\006Config\022"
      ";\n\023game_event_behavior\030\001 \003(\0132\036.Config.Ga"
      "meEventBehaviorEntry\0225\n\020auto_ref_configs"
      "\030\002 \003(\0132\033.Config.AutoRefConfigsEntry\022\035\n\025a"
      "ctive_tracker_source\030\003 \001(\t\022\r\n\005teams\030\004 \003("
      "\t\022\025\n\rauto_continue\030\005 \001(\010\032J\n\026GameEventBeh"
      "aviorEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0162\020"
      ".Config.Behavior:\0028\001\032E\n\023AutoRefConfigsEn"
      "try\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016.AutoRe"
      "fConfig:\0028\001\"\225\001\n\010Behavior\022\024\n\020BEHAVIOR_UNK"
      "NOWN\020\000\022\023\n\017BEHAVIOR_ACCEPT\020\001\022\034\n\030BEHAVIOR_"
      "ACCEPT_MAJORITY\020\002\022\031\n\025BEHAVIOR_PROPOSE_ON"
      "LY\020\003\022\020\n\014BEHAVIOR_LOG\020\004\022\023\n\017BEHAVIOR_IGNOR"
      "E\020\005\"\204\002\n\rAutoRefConfig\022B\n\023game_event_beha"
      "vior\030\001 \003(\0132%.AutoRefConfig.GameEventBeha"
      "viorEntry\032Q\n\026GameEventBehaviorEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022&\n\005value\030\002 \001(\0162\027.AutoRefConfig."
      "Behavior:\0028\001\"\\\n\010Behavior\022\024\n\020BEHAVIOR_UNK"
      "NOWN\020\000\022\023\n\017BEHAVIOR_ACCEPT\020\001\022\020\n\014BEHAVIOR_"
      "LOG\020\002\022\023\n\017BEHAVIOR_IGNORE\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 786);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ssl_gc_engine_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ssl_5fgc_5fengine_5fconfig_2eproto
const ::google::protobuf::EnumDescriptor* Config_Behavior_descriptor() {
  protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool Config_Behavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Config_Behavior Config::BEHAVIOR_UNKNOWN;
const Config_Behavior Config::BEHAVIOR_ACCEPT;
const Config_Behavior Config::BEHAVIOR_ACCEPT_MAJORITY;
const Config_Behavior Config::BEHAVIOR_PROPOSE_ONLY;
const Config_Behavior Config::BEHAVIOR_LOG;
const Config_Behavior Config::BEHAVIOR_IGNORE;
const Config_Behavior Config::Behavior_MIN;
const Config_Behavior Config::Behavior_MAX;
const int Config::Behavior_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AutoRefConfig_Behavior_descriptor() {
  protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool AutoRefConfig_Behavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutoRefConfig_Behavior AutoRefConfig::BEHAVIOR_UNKNOWN;
const AutoRefConfig_Behavior AutoRefConfig::BEHAVIOR_ACCEPT;
const AutoRefConfig_Behavior AutoRefConfig::BEHAVIOR_LOG;
const AutoRefConfig_Behavior AutoRefConfig::BEHAVIOR_IGNORE;
const AutoRefConfig_Behavior AutoRefConfig::Behavior_MIN;
const AutoRefConfig_Behavior AutoRefConfig::Behavior_MAX;
const int AutoRefConfig::Behavior_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

Config_GameEventBehaviorEntry_DoNotUse::Config_GameEventBehaviorEntry_DoNotUse() {}
Config_GameEventBehaviorEntry_DoNotUse::Config_GameEventBehaviorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Config_GameEventBehaviorEntry_DoNotUse::MergeFrom(const Config_GameEventBehaviorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Config_GameEventBehaviorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[0];
}
void Config_GameEventBehaviorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Config_AutoRefConfigsEntry_DoNotUse::Config_AutoRefConfigsEntry_DoNotUse() {}
Config_AutoRefConfigsEntry_DoNotUse::Config_AutoRefConfigsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Config_AutoRefConfigsEntry_DoNotUse::MergeFrom(const Config_AutoRefConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Config_AutoRefConfigsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[1];
}
void Config_AutoRefConfigsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kGameEventBehaviorFieldNumber;
const int Config::kAutoRefConfigsFieldNumber;
const int Config::kActiveTrackerSourceFieldNumber;
const int Config::kTeamsFieldNumber;
const int Config::kAutoContinueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      teams_(from.teams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_event_behavior_.MergeFrom(from.game_event_behavior_);
  auto_ref_configs_.MergeFrom(from.auto_ref_configs_);
  active_tracker_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_active_tracker_source()) {
    active_tracker_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.active_tracker_source_);
  }
  auto_continue_ = from.auto_continue_;
  // @@protoc_insertion_point(copy_constructor:Config)
}

void Config::SharedCtor() {
  active_tracker_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auto_continue_ = false;
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:Config)
  SharedDtor();
}

void Config::SharedDtor() {
  active_tracker_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_event_behavior_.Clear();
  auto_ref_configs_.Clear();
  teams_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    active_tracker_source_.ClearNonDefaultToEmptyNoArena();
  }
  auto_continue_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .Config.Behavior> game_event_behavior = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry(game_event_behavior_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::Config_Behavior_IsValid(*entry->mutable_value())) {
              (*mutable_game_event_behavior())[entry->key()] =
                  static_cast< ::Config_Behavior >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(1, data);
            }
          }
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            entry->key().data(), static_cast<int>(entry->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Config.GameEventBehaviorEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .AutoRefConfig> auto_ref_configs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Config_AutoRefConfigsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Config_AutoRefConfigsEntry_DoNotUse,
              ::std::string, ::AutoRefConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::AutoRefConfig > > parser(&auto_ref_configs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Config.AutoRefConfigsEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string active_tracker_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_active_tracker_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->active_tracker_source().data(), static_cast<int>(this->active_tracker_source().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Config.active_tracker_source");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string teams = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_teams()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teams(this->teams_size() - 1).data(),
            static_cast<int>(this->teams(this->teams_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Config.teams");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool auto_continue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_auto_continue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_continue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .Config.Behavior> game_event_behavior = 1;
  if (!this->game_event_behavior().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "Config.GameEventBehaviorEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->game_event_behavior().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->game_event_behavior().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Config_Behavior >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .AutoRefConfig> auto_ref_configs = 2;
  if (!this->auto_ref_configs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "Config.AutoRefConfigsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->auto_ref_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->auto_ref_configs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_iterator
          it = this->auto_ref_configs().begin();
          it != this->auto_ref_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Config_AutoRefConfigsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(auto_ref_configs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Config_AutoRefConfigsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_iterator
          it = this->auto_ref_configs().begin();
          it != this->auto_ref_configs().end(); ++it) {
        entry.reset(auto_ref_configs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  cached_has_bits = _has_bits_[0];
  // optional string active_tracker_source = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->active_tracker_source().data(), static_cast<int>(this->active_tracker_source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Config.active_tracker_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->active_tracker_source(), output);
  }

  // repeated string teams = 4;
  for (int i = 0, n = this->teams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teams(i).data(), static_cast<int>(this->teams(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Config.teams");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->teams(i), output);
  }

  // optional bool auto_continue = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->auto_continue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .Config.Behavior> game_event_behavior = 1;
  if (!this->game_event_behavior().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "Config.GameEventBehaviorEntry.key");
      }
    };

    if (deterministic &&
        this->game_event_behavior().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->game_event_behavior().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Config_Behavior >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .AutoRefConfig> auto_ref_configs = 2;
  if (!this->auto_ref_configs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "Config.AutoRefConfigsEntry.key");
      }
    };

    if (deterministic &&
        this->auto_ref_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->auto_ref_configs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_iterator
          it = this->auto_ref_configs().begin();
          it != this->auto_ref_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Config_AutoRefConfigsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(auto_ref_configs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Config_AutoRefConfigsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_iterator
          it = this->auto_ref_configs().begin();
          it != this->auto_ref_configs().end(); ++it) {
        entry.reset(auto_ref_configs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  cached_has_bits = _has_bits_[0];
  // optional string active_tracker_source = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->active_tracker_source().data(), static_cast<int>(this->active_tracker_source().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Config.active_tracker_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->active_tracker_source(), target);
  }

  // repeated string teams = 4;
  for (int i = 0, n = this->teams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teams(i).data(), static_cast<int>(this->teams(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Config.teams");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->teams(i), target);
  }

  // optional bool auto_continue = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->auto_continue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<string, .Config.Behavior> game_event_behavior = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->game_event_behavior_size());
  {
    ::std::unique_ptr<Config_GameEventBehaviorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::Config_Behavior >::const_iterator
        it = this->game_event_behavior().begin();
        it != this->game_event_behavior().end(); ++it) {
      entry.reset(game_event_behavior_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .AutoRefConfig> auto_ref_configs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->auto_ref_configs_size());
  {
    ::std::unique_ptr<Config_AutoRefConfigsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::AutoRefConfig >::const_iterator
        it = this->auto_ref_configs().begin();
        it != this->auto_ref_configs().end(); ++it) {
      entry.reset(auto_ref_configs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string teams = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->teams_size());
  for (int i = 0, n = this->teams_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->teams(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string active_tracker_source = 3;
    if (has_active_tracker_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->active_tracker_source());
    }

    // optional bool auto_continue = 5;
    if (has_auto_continue()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_event_behavior_.MergeFrom(from.game_event_behavior_);
  auto_ref_configs_.MergeFrom(from.auto_ref_configs_);
  teams_.MergeFrom(from.teams_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_active_tracker_source();
      active_tracker_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.active_tracker_source_);
    }
    if (cached_has_bits & 0x00000002u) {
      auto_continue_ = from.auto_continue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  game_event_behavior_.Swap(&other->game_event_behavior_);
  auto_ref_configs_.Swap(&other->auto_ref_configs_);
  teams_.InternalSwap(CastToBase(&other->teams_));
  active_tracker_source_.Swap(&other->active_tracker_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auto_continue_, other->auto_continue_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

AutoRefConfig_GameEventBehaviorEntry_DoNotUse::AutoRefConfig_GameEventBehaviorEntry_DoNotUse() {}
AutoRefConfig_GameEventBehaviorEntry_DoNotUse::AutoRefConfig_GameEventBehaviorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AutoRefConfig_GameEventBehaviorEntry_DoNotUse::MergeFrom(const AutoRefConfig_GameEventBehaviorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AutoRefConfig_GameEventBehaviorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[3];
}
void AutoRefConfig_GameEventBehaviorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void AutoRefConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoRefConfig::kGameEventBehaviorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoRefConfig::AutoRefConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_AutoRefConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AutoRefConfig)
}
AutoRefConfig::AutoRefConfig(const AutoRefConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_event_behavior_.MergeFrom(from.game_event_behavior_);
  // @@protoc_insertion_point(copy_constructor:AutoRefConfig)
}

void AutoRefConfig::SharedCtor() {
}

AutoRefConfig::~AutoRefConfig() {
  // @@protoc_insertion_point(destructor:AutoRefConfig)
  SharedDtor();
}

void AutoRefConfig::SharedDtor() {
}

void AutoRefConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutoRefConfig::descriptor() {
  ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoRefConfig& AutoRefConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::scc_info_AutoRefConfig.base);
  return *internal_default_instance();
}


void AutoRefConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:AutoRefConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_event_behavior_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutoRefConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AutoRefConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .AutoRefConfig.Behavior> game_event_behavior = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry(game_event_behavior_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::AutoRefConfig_Behavior_IsValid(*entry->mutable_value())) {
              (*mutable_game_event_behavior())[entry->key()] =
                  static_cast< ::AutoRefConfig_Behavior >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(1, data);
            }
          }
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            entry->key().data(), static_cast<int>(entry->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AutoRefConfig.GameEventBehaviorEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AutoRefConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AutoRefConfig)
  return false;
#undef DO_
}

void AutoRefConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AutoRefConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .AutoRefConfig.Behavior> game_event_behavior = 1;
  if (!this->game_event_behavior().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "AutoRefConfig.GameEventBehaviorEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->game_event_behavior().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->game_event_behavior().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AutoRefConfig)
}

::google::protobuf::uint8* AutoRefConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AutoRefConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .AutoRefConfig.Behavior> game_event_behavior = 1;
  if (!this->game_event_behavior().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "AutoRefConfig.GameEventBehaviorEntry.key");
      }
    };

    if (deterministic &&
        this->game_event_behavior().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->game_event_behavior().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_iterator
          it = this->game_event_behavior().begin();
          it != this->game_event_behavior().end(); ++it) {
        entry.reset(game_event_behavior_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AutoRefConfig)
  return target;
}

size_t AutoRefConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AutoRefConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<string, .AutoRefConfig.Behavior> game_event_behavior = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->game_event_behavior_size());
  {
    ::std::unique_ptr<AutoRefConfig_GameEventBehaviorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::AutoRefConfig_Behavior >::const_iterator
        it = this->game_event_behavior().begin();
        it != this->game_event_behavior().end(); ++it) {
      entry.reset(game_event_behavior_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoRefConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AutoRefConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoRefConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoRefConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AutoRefConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AutoRefConfig)
    MergeFrom(*source);
  }
}

void AutoRefConfig::MergeFrom(const AutoRefConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AutoRefConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_event_behavior_.MergeFrom(from.game_event_behavior_);
}

void AutoRefConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AutoRefConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoRefConfig::CopyFrom(const AutoRefConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AutoRefConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoRefConfig::IsInitialized() const {
  return true;
}

void AutoRefConfig::Swap(AutoRefConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoRefConfig::InternalSwap(AutoRefConfig* other) {
  using std::swap;
  game_event_behavior_.Swap(&other->game_event_behavior_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutoRefConfig::GetMetadata() const {
  protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgc_5fengine_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Config_GameEventBehaviorEntry_DoNotUse* Arena::CreateMaybeMessage< ::Config_GameEventBehaviorEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Config_GameEventBehaviorEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Config_AutoRefConfigsEntry_DoNotUse* Arena::CreateMaybeMessage< ::Config_AutoRefConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Config_AutoRefConfigsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Config* Arena::CreateMaybeMessage< ::Config >(Arena* arena) {
  return Arena::CreateInternal< ::Config >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AutoRefConfig_GameEventBehaviorEntry_DoNotUse* Arena::CreateMaybeMessage< ::AutoRefConfig_GameEventBehaviorEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::AutoRefConfig_GameEventBehaviorEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AutoRefConfig* Arena::CreateMaybeMessage< ::AutoRefConfig >(Arena* arena) {
  return Arena::CreateInternal< ::AutoRefConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
